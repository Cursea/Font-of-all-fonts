{"version":3,"sources":["localStorageService.js","components/FontCard/FontCard.js","components/Footer/Footer.js","components/HeaderNav/HeaderNav.js","components/PageNav/PageNav.js","App.js","index.js"],"names":["updater","get","key","stringValue","localStorage","getItem","JSON","parse","set","value","stringified","stringify","setItem","FontCards","filterText","customText","fonts","numberOfFonts","fontSize","filteredCards","filter","font","family","toLocaleLowerCase","includes","slice","map","card","className","replace","style","fontFamily","Footer","href","id","HeaderNav","PageNav","setFilter","setCustomText","darkMode","setDarkMode","setFontSize","categories","icon","setCategories","faSun","faMoon","category","faSearch","htmlFor","type","name","placeholder","onChange","onClick","faList","faRedo","require","config","App","useState","setFilterText","setFonts","atTop","setAtTop","atBottom","setAtBottom","setNumberOfFonts","localStorageService","Serif","SansSerif","Display","Handwriting","Monospace","useEffect","a","fetch","process","response","json","items","fetchData","lightsOn","useCallback","document","body","classList","remove","add","window","addEventListener","handleScroll","removeEventListener","documentElement","scrollTop","innerHeight","offsetHeight","increaseNoOfFonts","prev","event","target","display","faArrowCircleUp","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d7ba85f.chunk.js","sourcesContent":["const get = (key) => {\r\n  const stringValue = localStorage.getItem(key)\r\n  const value = JSON.parse(stringValue)\r\n  return value\r\n}\r\n\r\nconst set = (key, value) => {\r\n  let stringified = JSON.stringify(value)\r\n  localStorage.setItem(stringified)\r\n}\r\n\r\nconst updater = { get, set }\r\n\r\nexport default updater\r\n","import React from 'react'\r\nimport './FontCard.css'\r\n\r\nconst FontCards = ({\r\n  filterText,\r\n  customText,\r\n  fonts,\r\n  numberOfFonts,\r\n  fontSize,\r\n}) => {\r\n  const filteredCards = fonts.filter((font) =>\r\n    font.family.toLocaleLowerCase().includes(filterText)\r\n  )\r\n\r\n  const cardsToShow = filterText ? filteredCards : fonts.slice(0, numberOfFonts)\r\n\r\n  return cardsToShow.map((card) => (\r\n    <div className=\"card\" key={card.family}>\r\n      <div className=\"font-info\">\r\n        <h1 className=\"font-name\">{card.family}</h1>\r\n      </div>\r\n      <style>\r\n        @import url(\r\n        {`https://fonts.googleapis.com/css?family=${card.family.replace(\r\n          /\\s+/g,\r\n          '+'\r\n        )}&display=swap`}\r\n        )\r\n      </style>\r\n      <p\r\n        className=\"sample-text\"\r\n        style={{ fontFamily: card.family, fontSize: fontSize }}\r\n      >\r\n        {!customText\r\n          ? `“If cats looked like frogs we'd realize what nasty, cruel little bastards they are.\r\n          Style. That's what people remember.”\r\n          \r\n          ― Terry Pratchett, Lords and Ladies`\r\n          : customText}\r\n      </p>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default FontCards\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>\r\n        coded by Marco Burman | 2021 |{' '}\r\n        <a href=\"https://github.com/Cursea\" id=\"portfolio\">portfolio project</a>\r\n      </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport './HeaderNav.css'\r\n\r\nconst HeaderNav = () => {\r\n  return (\r\n    <header id=\"header-nav\">\r\n      <div>\r\n        <h1>\r\n          Font <span id=\"of-all\">of all</span> <span id=\"fonts\">Fonts</span>\r\n        </h1>\r\n      </div>\r\n      <nav>\r\n        <ul id=\"links\">\r\n          <li>\r\n            <a href=\"/Catalogue\">CATALOGUE</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/Featured\">FEATURED</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/Articles\">ARTICLES</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/About\">ABOUT</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default HeaderNav\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faSearch,\r\n  faList,\r\n  faRedo,\r\n  faMoon,\r\n  faSun,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport './PageNav.css'\r\n\r\nconst PageNav = ({\r\n  filterText,\r\n  setFilter,\r\n  customText,\r\n  setCustomText,\r\n  darkMode,\r\n  setDarkMode,\r\n  setFontSize,\r\n  categories,\r\n  setCategories,\r\n}) => {\r\n  let icon = darkMode ? faSun : faMoon\r\n  let selectedCategories = categories.map((category) => category)\r\n\r\n  return (\r\n    <>\r\n      <nav id=\"major-nav\">\r\n        <FontAwesomeIcon icon={faSearch} id=\"searchIcon\" />\r\n        <label htmlFor=\"search\">Search fonts</label>\r\n        <input\r\n          type=\"search\"\r\n          name=\"search\"\r\n          id=\"search\"\r\n          placeholder=\"Search fonts\"\r\n          value={filterText}\r\n          onChange={setFilter}\r\n        />\r\n        <div className=\"divider\"></div>\r\n        <label htmlFor=\"custom-text\">Enter text</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"custom-text\"\r\n          id=\"custom-text\"\r\n          placeholder=\"Type something\"\r\n          value={customText}\r\n          onChange={setCustomText}\r\n        />\r\n        <div className=\"divider\"></div>\r\n        <label htmlFor=\"font-sizes\"></label>\r\n        <select id=\"font-sizes\" onChange={setFontSize}>\r\n          <option value=\"16px\">16px</option>\r\n          <option value=\"24px\">24px</option>\r\n          <option value=\"33px\">32px</option>\r\n          <option value=\"40px\">40px</option>\r\n        </select>\r\n        <div className=\"divider\"></div>\r\n        <div id=\"darkmode-setting\">\r\n          <label htmlFor=\"darkmode-checkbox\" id=\"darkmode-label\">\r\n            <FontAwesomeIcon icon={icon} />\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"darkmode-checkbox\"\r\n            value={darkMode}\r\n            onClick={setDarkMode}\r\n          ></input>\r\n        </div>\r\n        <button id=\"list-mode\" className=\"fas fa-list\" type=\"button\">\r\n          <FontAwesomeIcon icon={faList} />\r\n        </button>\r\n        <button id=\"reset\" className=\"fas fa-redo\" type=\"button\">\r\n          <FontAwesomeIcon icon={faRedo} />\r\n        </button>\r\n      </nav>\r\n      <div id=\"filter-wrapper\">\r\n        <label htmlFor=\"serif\">\r\n          <input type=\"checkbox\" id=\"serif\"></input>\r\n          Serif\r\n        </label>\r\n        <label htmlFor=\"sansSerif\">\r\n          <input type=\"checkbox\" id=\"sansSerif\"></input>\r\n          Sans Serif\r\n        </label>\r\n        <label htmlFor=\"display\">\r\n          <input type=\"checkbox\" id=\"display\"></input>\r\n          Display\r\n        </label>\r\n        <label htmlFor=\"handwriting\">\r\n          <input type=\"checkbox\" id=\"handwriting\"></input>\r\n          Handwriting\r\n        </label>\r\n        <label htmlFor=\"monospace\">\r\n          <input type=\"checkbox\" id=\"monospace\"></input>\r\n          Monospace\r\n        </label>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PageNav\r\n","import React, { useEffect, useState, useCallback } from 'react'\nimport './App.css'\nimport localStorageService from './localStorageService'\nimport FontCards from './components/FontCard/FontCard'\nimport Footer from './components/Footer/Footer'\nimport HeaderNav from './components/HeaderNav/HeaderNav'\nimport PageNav from './components/PageNav/PageNav'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowCircleUp } from '@fortawesome/free-solid-svg-icons'\nrequire('dotenv').config()\n\nconst App = () => {\n  const [filterText, setFilterText] = useState('')\n  const [customText, setCustomText] = useState('')\n  const [fonts, setFonts] = useState([])\n  const [fontSize, setFontSize] = useState('16px')\n  const [atTop, setAtTop] = useState(true)\n  const [atBottom, setAtBottom] = useState(false)\n  const [numberOfFonts, setNumberOfFonts] = useState(16)\n  const [darkMode, setDarkMode] = useState(\n    localStorageService.get('darkMode') === null\n      ? true\n      : localStorageService.get('darkMode')\n  )\n  const [categories, setCategories] = useState([\n    { Serif: true },\n    { SansSerif: true },\n    { Display: true },\n    { Handwriting: true },\n    { Monospace: true },\n  ])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\n        `https://www.googleapis.com/webfonts/v1/webfonts?key=${process.env.REACT_APP_API_KEY}&sort=trending`\n      )\n\n      const json = await response.json()\n      return setFonts(json.items)\n    }\n    fetchData()\n  }, [])\n\n  const lightsOn = useCallback(() => {\n    return darkMode\n      ? document.body.classList.remove('light')\n      : document.body.classList.add('light')\n  }, [darkMode])\n\n  useEffect(() => {\n    localStorage.setItem('darkMode', darkMode)\n    lightsOn()\n  }, [darkMode, lightsOn])\n\n  const handleDarkModeChange = () => {\n    setDarkMode(!darkMode)\n    lightsOn()\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterText(event.target.value)\n  }\n\n  const handleCustomTextChange = (event) => {\n    setCustomText(event.target.value)\n  }\n\n  const handleFontSizeChange = (event) => {\n    setFontSize(event.target.value)\n  }\n\n  const handleCategoryChange = (event) => {}\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  const handleScroll = () => {\n    document.documentElement.scrollTop !== 0 ? setAtTop(false) : setAtTop(true)\n\n    if (\n      window.innerHeight + document.documentElement.scrollTop + 2 >=\n      document.documentElement.offsetHeight\n    ) {\n      setAtBottom(true)\n    }\n  }\n\n  useEffect(() => {\n    if (!atBottom) return\n    increaseNoOfFonts()\n  }, [atBottom])\n\n  const increaseNoOfFonts = () => {\n    setNumberOfFonts((prev) => prev + 12)\n    setAtBottom(false)\n  }\n\n  return (\n    <>\n      <HeaderNav />\n\n      <main>\n        <PageNav\n          filterText={filterText}\n          customText={customText}\n          setFilter={handleFilterChange}\n          setCustomText={handleCustomTextChange}\n          darkMode={darkMode}\n          setDarkMode={handleDarkModeChange}\n          setFontSize={handleFontSizeChange}\n          categories={categories}\n          setCategories={handleCategoryChange}\n        />\n\n        <div id=\"content\">\n          <FontCards\n            filterText={filterText}\n            customText={customText}\n            fonts={fonts}\n            categories={categories}\n            numberOfFonts={numberOfFonts}\n            fontSize={fontSize}\n          />\n        </div>\n        <button\n          id=\"return-to-the-top\"\n          type=\"button\"\n          style={{ display: atTop ? 'none' : 'block' }}\n          onClick={() => (document.documentElement.scrollTop = 0)}\n        >\n          <FontAwesomeIcon icon={faArrowCircleUp} />\n        </button>\n      </main>\n\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}